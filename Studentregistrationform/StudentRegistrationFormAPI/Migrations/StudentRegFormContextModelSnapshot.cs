// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentRegistrationFormAPI.Models;

#nullable disable

namespace StudentRegistrationFormAPI.Migrations
{
    [DbContext(typeof(StudentRegFormContext))]
    partial class StudentRegFormContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentRegistrationFormAPI.Models.StudentRegForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BirthDay")
                        .HasColumnType("integer");

                    b.Property<string>("BirthMonth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BirthYear")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HSCBoard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HSCPercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("HSCYearOfPassing")
                        .HasColumnType("integer");

                    b.Property<string[]>("Hobbies")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PGBoard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PGPercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("PGYearOfPassing")
                        .HasColumnType("integer");

                    b.Property<int>("Pincode")
                        .HasColumnType("integer");

                    b.Property<string>("SSLCBoard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("SSLCPercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("SSLCYearOfPassing")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UGBoard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("UGPercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("UGYearOfPassing")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StudentRegFormSet");
                });
#pragma warning restore 612, 618
        }
    }
}
